 May 11th, 2018

SQL and REST
----------------------------------------------------------------------------------------
* data driven Testing ?
    - data driven framework when do we do it?

    - When: Whenever a functionality  or a module in an app requires testing with 
            multiple sets of data(also called parametrization)
            multiple imputs then we need to perform data driven testing and automation.
            these scenarios are one of the things that must be automated. 

    - How: Test data is separated from code and stored into external sources. Excel files,
            CSV files, Database.
    
    BENEFIT: more organized data centralized collaboration on test data it can come with 
            BA, MTs, ETC
    
----------------------------------------------------------------------------------------
* how to read data from excel?
    - I use Apache POI to read data from excel or any excel related tests
    
        EXAMPLE: 
        String file = "TestData.xlsx";
        FileImputStream inStream = new FileInputStream(file);

        String filePath = "C:\\user\\alex\\Desktop";
        FileInputStream instream = new FileInputStream(filePath);
        Workbook workBook = WorkbookFactory.create(inStream);
        Sheet worksheet = workBook.getsheet(0);
        Row row = workSheet.getRow(0);
        Cell cel = row.getCell(0);
        System.out.println(cell.toString());

        WRITE DATA: 
                CENTRAL MAVEN REPO -> WE ARE USING
                COMPANY MAVEN REPO -> YOU USE AT WORK 
    

----------------------------------------------------------------------------------------
* read Data From Database?
        - Manually: Oracle  SQL developer <- for manually testing
        - Automation: JDBC -> JAVA DATABASE CONNECTIVITY <- is used for automation


        Hierarchy of Objects:
                                CONNECTION -> STATEMENT -> RESULTSET
        HOW TO STABLISH CONNECTION: 
                                Connetion conn = DriverManger.getConnection("URL","username","password")
                                Statement stat = connection.createStatement(ResultSet.TYPE_...)
                                ResultSet resu = statement.executeQuery("select * from countries");

        - test data is separted from code ..

        - if the amount of data is not that huge then i use cucumber scenario outline with example
        table

        - and other times i maintain test data in excel files and i use apache POI library
        to read and write data using JAVA

        - if data comes from a database or i need to do datase validiation
        i use sql queries along with JDBC library in java 

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------
















