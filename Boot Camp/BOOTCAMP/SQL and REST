 May 11th, 2018

SQL and REST
----------------------------------------------------------------------------------------
When you talk about your framework mention this frameworks:

        Page Object model framework
        cucumber Bdd framework
        TestNG based 
        Data Driven framework

 ( comes from QTP / UFT style) <- do not mention much because its mostly UFT
        Hybrid Framework
        Keyword Driven Framework 

** Tell me about your self SQL **

        I am confortable with front end test automation using java and selenium
        WebDriver, Cucumber, Maven, Testng, Junit also i am good at restful API
        test automation using postman and restassured library in JAVA. I have rich 
        experience with database test automation using sql queries along with JDBC library
        in JAVA. 

----------------------------------------------------------------------------------------
* data driven Testing ?
    - data driven framework when do we do it?

    - When: Whenever a functionality  or a module in an app requires testing with 
            multiple sets of data(also called parametrization)
            multiple imputs then we need to perform data driven testing and automation.
            these scenarios are one of the things that must be automated. 

    - How: Test data is separated from code and stored into external sources. Excel files,
            CSV files, Database.
    
    BENEFIT: more organized data centralized collaboration on test data it can come with 
            BA, MTs, ETC
    
----------------------------------------------------------------------------------------
* how to read data from excel?
    - I use Apache POI to read data from excel or any excel related tests
    
        EXAMPLE: 
        String file = "TestData.xlsx";
        FileImputStream inStream = new FileInputStream(file);

        String filePath = "C:\\user\\alex\\Desktop";
        FileInputStream instream = new FileInputStream(filePath);
        Workbook workBook = WorkbookFactory.create(inStream);
        Sheet worksheet = workBook.getsheet(0);
        Row row = workSheet.getRow(0);
        Cell cel = row.getCell(0);
        System.out.println(cell.toString());

        WRITE DATA: 
                CENTRAL MAVEN REPO -> WE ARE USING
                COMPANY MAVEN REPO -> YOU USE AT WORK 
    

----------------------------------------------------------------------------------------
* read Data From Database?
        - Manually: Oracle  SQL developer <- for manually testing
        - Automation: JDBC -> JAVA DATABASE CONNECTIVITY <- is used for automation


        Hierarchy of Objects:
                                CONNECTION -> STATEMENT -> RESULTSET
        HOW TO STABLISH CONNECTION: 
                                Connetion conn = DriverManger.getConnection("URL","username","password")
                                Statement stat = connection.createStatement(ResultSet.TYPE_...)
                                ResultSet resu = statement.executeQuery("select * from countries");

        - test data is separted from code ..

        - if the amount of data is not that huge then i use cucumber scenario outline with example
        table

        - and other times i maintain test data in excel files and i use apache POI library
        to read and write data using JAVA

        - if data comes from a database or i need to do datase validiation
        i use sql queries along with JDBC library in java 

----------------------------------------------------------------------------------------
* where do we close connection in database in try catch block 
in case we will get exeption thrown. " in catch block" 

    1) in finally block
    2) i use try-with-resources and it will automatically close

        Example 1: in fanally block

                try{
                        Connetion conn = DriverManger.getConnection("URL","username","password")
                        Statement stat = connection.createStatement(ResultSet.TYPE_...)
                        ResultSet resu = statement.executeQuery("select * from countries");
                }catch(SQLException e){
                        //some code to report
                        e.printStackTrace();
                }finally{
                        try{
                        result.close();
                        statement.close();
                        connection.close();
                        }catch(exception e){
                                // some code 
                        }
                }

        Example 2: try-with-resources 

        any class or interface that extends closable or autoclosable interface
       

                try(
                        Connetion conn = DriverManger.getConnection("URL","username","password")
                        Statement stat = connection.createStatement(ResultSet.TYPE_...)
                        ResultSet resu = statement.executeQuery("select * from countries");)
                {
                        //some code to read data from resulset 
                }
                }catch(SQLException e){
                        //some code to report
                        e.printStackTrace();
                }

----------------------------------------------------------------------------------------
* have you done any BACK END TESTING or DATABASE TESTING?(they mean API and Database)
       
        - Yes I have lots of experience with working with databases and
          I am confortable with writing SQL queries. I have experience with working on relational
          databases like ORACLE, MySQL, SQL Server.
        
        - Have you worked with non-relational databases? 
                - I dont have hands on experience i know that its is like JSON 
                  format database and i have good experience with working with JSON
                  files. And I am quick learner and crosfunctional. 
              
----------------------------------------------------------------------------------------
* how do you create a table in SQL what are constraints?

        - create table computer(
                computer_id number primary key,
                brand varchar2(20) not null,
                type char(1) not null
                );

        - SQL column constraints: 
                Primary key, foreign key, null,not null unique.

        - Describe computers -> to display table information metadata of table
                Describe computers;

        - insert data in SQL database 
                insert into computers values( 123 ,'HP','L');
                select * from computers


----------------------------------------------------------------------------------------
* SQL technical interview
        1.	Write a SQL query to find how many records are there in Town table where 
        “TOWN_NAME” has “ell” in them?
                - select count(*) 
                from town 
                where town_name like '%ell%'; 

        2.	Write a SQL query to find how many occurrences of each “COUNTRY_CODE” are 
        there in the Town table?
                - select country_code,count(*)
                from town 
                Group by country_code;

        3.	Write a SQL query to find the “TOWN_NAME” where there are non-alphanumeric 
        characters? REGEX is used for matching some formats like 10 number etc
                select(*)
                from town
                where town_name not like '%[^a-zA-Z0-9]%';
                

        4.	Write a SQL query to select the first 5 records from Town table?
                select * 
                from town
                where rownum <= 5;

----------------------------------------------------------------------------------------
* Inner JOIN interview
                - when we query data from multiple tables we need joins and when we need 
                to find matching records we use inner joins.
                - inner join is used when we need to display data from multiple tables.
                and it will return matching records. 
        
        1.Write a SQL query to find the salary for the people working in the QA department 
        and the HR Department?

                select empid, name, salary, deptid
                from employee e join departments d 
                on e.empid = d.empid
                where deptid in('QA','HR');


----------------------------------------------------------------------------------------
* selfJoin interview ( )
        1.
        select emp.employee_id, emp.first_name, man.first_name, man.last_name
        from employees emp join employees man
        on emp.manager_id = man.employee_id;

----------------------------------------------------------------------------------------
* inner join vs outer join
        - we need joins when ever we need query data from multiple tables
        
        1.Inner join returns matching records from both tables according to joining condition
        2.outter join returns matching data plus non matching data either from right
          or left tables.

          Example: inner join
                select last_name, department_name
                from employees join departments
                on employees.department_id = departments.department_id;
----------------------------------------------------------------------------------------
* difference between Union and Union ALL 
        - we use these set operators when we need to display data from multiple or 2 queries
        - UNION: removes duplicates and null values and sorts the result, 
        - UNION ALL: does not remove duplicates and does not sort 
----------------------------------------------------------------------------------------
* difference between Intersect and Minus
        - INTERSECT: displays common data en both queries
        - MINUS: returns records from first query that is not present in second query.

----------------------------------------------------------------------------------------
* JOIN VS UNION interview question
        - joins are used to display query from multiple tables
        - Union is used to query data from multiple queries. 
----------------------------------------------------------------------------------------
* difference between GROUP BY vs ORDER BY
        - group by is used whenever we work with group functions it will help to
        create sub groups within a group
        - order by is used to sort either descending and ascending
----------------------------------------------------------------------------------------
* difference between HAVING vs WHERE
        - when ever our condition includes a group founction 
        example: HAVING max(salary) > 9000;

        - where is used to filter the results and when we do not use group function
        example: where employee_id = 234;
----------------------------------------------------------------------------------------
* Display 5th row from table ( CORE RELATED SUB QUERY)

        - we need to use correlated subquery
        - inner query will get columns along with rownumber and outer query will look
        for specific row number

        example 1: 
        select *
        from (select employee_id,first_name, rownum as rn from employees)
        where rn = 5;

        example 2:
        (select * from employees where rownum <=5) 
        minus 
        (select * from employees where rownum <=4);

        example 3: 5th largest salary questions
        select salary from employees e1 
        where 5= (select count(salary)
        from employees e2 where e1.salary<=e2.salary);
----------------------------------------------------------------------------------------
* difference between drop vs truncate

        - both are ddl commands and cannot be undone, 
        - drop will remove data and table together
        - truncate will remove all data but not table structure.
        - DROP EMPLOYEES;
        - TRUNCATE EMPLOYEES;

----------------------------------------------------------------------------------------
* Commit commands
        - when ever we make changes to database we can commit to save changes

----------------------------------------------------------------------------------------
* do you know SQL?
        - yes I have experience and i am confortable with writing SQL queries DDL and DML
        commands. currently working with oracle database that is running in amazon cloud server.

        - WHAT IS DDL? data definition language : create alter drop truncate
        - DML data manipulation languages: select delete insert update
----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------
* what kind of database testing are you doing?
        - 
----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------
















