 May 11th, 2018

SQL and REST
----------------------------------------------------------------------------------------
* data driven Testing ?
    - data driven framework when do we do it?

    - When: Whenever a functionality  or a module in an app requires testing with 
            multiple sets of data(also called parametrization)
            multiple imputs then we need to perform data driven testing and automation.
            these scenarios are one of the things that must be automated. 

    - How: Test data is separated from code and stored into external sources. Excel files,
            CSV files, Database.
    
    BENEFIT: more organized data centralized collaboration on test data it can come with 
            BA, MTs, ETC
    
----------------------------------------------------------------------------------------
* how to read data from excel?
    - I use Apache POI to read data from excel or any excel related tests
    
        EXAMPLE: 
        String file = "TestData.xlsx";
        FileImputStream inStream = new FileInputStream(file);

        String filePath = "C:\\user\\alex\\Desktop";
        FileInputStream instream = new FileInputStream(filePath);
        Workbook workBook = WorkbookFactory.create(inStream);
        Sheet worksheet = workBook.getsheet(0);
        Row row = workSheet.getRow(0);
        Cell cel = row.getCell(0);
        System.out.println(cell.toString());

        WRITE DATA: 
                CENTRAL MAVEN REPO -> WE ARE USING
                COMPANY MAVEN REPO -> YOU USE AT WORK 
    

----------------------------------------------------------------------------------------
* read Data From Database?
        - Manually: Oracle  SQL developer <- for manually testing
        - Automation: JDBC -> JAVA DATABASE CONNECTIVITY <- is used for automation


        Hierarchy of Objects:
                                CONNECTION -> STATEMENT -> RESULTSET
        HOW TO STABLISH CONNECTION: 
                                Connetion conn = DriverManger.getConnection("URL","username","password")
                                Statement stat = connection.createStatement(ResultSet.TYPE_...)
                                ResultSet resu = statement.executeQuery("select * from countries");

        - test data is separted from code ..

        - if the amount of data is not that huge then i use cucumber scenario outline with example
        table

        - and other times i maintain test data in excel files and i use apache POI library
        to read and write data using JAVA

        - if data comes from a database or i need to do datase validiation
        i use sql queries along with JDBC library in java 

----------------------------------------------------------------------------------------
* where do we close connection in database in try catch block 
in case we will get exeption thrown. " in catch block" 

    1) in finally block
    2) i use try-with-resources and it will automatically close

        Example 1: in fanally block

                try{
                        Connetion conn = DriverManger.getConnection("URL","username","password")
                        Statement stat = connection.createStatement(ResultSet.TYPE_...)
                        ResultSet resu = statement.executeQuery("select * from countries");
                }catch(SQLException e){
                        //some code to report
                        e.printStackTrace();
                }finally{
                        try{
                        result.close();
                        statement.close();
                        connection.close();
                        }catch(exception e){
                                // some code 
                        }
                }

        Example 2: try-with-resources 

        any class or interface that extends closable or autoclosable interface
       

                try(
                        Connetion conn = DriverManger.getConnection("URL","username","password")
                        Statement stat = connection.createStatement(ResultSet.TYPE_...)
                        ResultSet resu = statement.executeQuery("select * from countries");)
                {
                        //some code to read data from resulset 
                }
                }catch(SQLException e){
                        //some code to report
                        e.printStackTrace();
                }

----------------------------------------------------------------------------------------
* have you done any BACK END TESTING or DATABASE TESTING?(they mean API and Database)
       
        - Yes I have lots of experience with working with databases and
          I am confortable with writing SQL queries. I have experience with working on relational
          databases like ORACLE, MySQL, SQL Server.
        
        - Have you worked with non-relational databases? 
                - I dont have hands on experience i know that its is like JSON 
                  format database and i have good experience with working with JSON
                  files. And I am quick learner and crosfunctional. 
              
----------------------------------------------------------------------------------------
* how do you create a table in SQL what are constraints?

        - create table computer(
                computer_id number primary key,
                brand varchar2(20) not null,
                type char(1) not null
                );

        - SQL column constraints: 
                Primary key, foreign key, null,not null unique.
                
----------------------------------------------------------------------------------------
When you talk about your framework mention this frameworks:

        Page Object model framework
        cucumber Bdd framework
        TestNG based 
        Data Driven framework

 ( comes from QTP / UFT style) <- do not mention much because its mostly UFT
        Hybrid Framework
        Keyword Driven Framework 

** Tell me about your self SQL **

        I am confortable with front end test automation using java and selenium
        WebDriver, Cucumber, Maven, Testng, Junit also i am good at restful API
        test automation using postman and restassured library in JAVA. I have rich 
        experience with database test automation using sql queries along with JDBC library
        in JAVA. 
----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------
















