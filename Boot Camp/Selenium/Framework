FRAMEWORK

May 12, 2018


--------------------------------------------------------------------------
* Testng vs Junit

                                 Junit                Testng
    Annotation support               y                   y   
    suite Test                       y                   y 
    ignore Test                      y                   y 
    exception Test                   y                   y 
    timeout                          y                   y 
    parameterizeed Test              y                   y 
    dependency test                  N                   y
    
    
--------------------------------------------------------------------------
* what tools used to develop your application?
    - Java Spring -> back end code of the website
    - angular -> front end of the application 
    - Tomcat server -> developers use it hosts the website
    - Oracle Database -> Database
    - jenkins -> to deploy the application
    - Eclipse and IntelliJ Idea 
    - SonarCube -> code coverage age tool
    - Docker -> host, deploy 


--------------------------------------------------------------------------
* describe your framework 1 TestNG + selenium
    - JAVA 
    - MAVEN
    - TestNG
    - SELENIUM 
    - EXTEND REPORTS : works with testng and selenium for reports 
    - LOG4J
    - JDBC
    - REST ASSURED
    - APACHE POI


--------------------------------------------------------------------------
* describe your framework ( CUCUMBER BDD FRAMEWORK)
    - TESTNG / JUNIT ( ONE OF THEM NOT BOTH)
    - CUCUMBER
    - JAVA
    - MAVEN
    - SELENIUM
    - HTML REPORTING
    - JDBC
    - REST ASSURED 
    - APACHE POI
    - GIT
    - JENKINS 
    
--------------------------------------------------------------------------
* HOW DOES YOUR FRAMEWORK GENERATE?
    - our cucumber BDD framework generates HTML reports
    - the reports shows the pass/fail coverage for feature files
    tags,steps.
    - the report contains the steps for each test
    - the report has screenshots for failures 

--------------------------------------------------------------------------
* how do you take screenshot in your framework?
    - IN my framework i have the logic for taking screen screenshots
    in the hook class. that is because i want to take screenshot 
    even if the test fails. Hook guarantees that the method for screenshot 
    will work even if test fails. 

        - TakeScreenshot interface is the method used to take the screenshot. It 
        comes from selenium interface.
        - this report is the same report used in my jenkins test. when 
        on jenkins i generate the report using the cucumber reports plugin
        - when i run locally same report is generated by the configuration in the pom
        file.
        - both of this configuration options use the Json file to generate report
            PLUGIN = "json...."
--------------------------------------------------------------------------
* what do you use for logging?
    - i use log4j for logging. i always log important steps in the test executing
    that helps me to debut when there is a failure.
    - log4j is not a replacement for html reports.


--------------------------------------------------------------------------
* how does the feature file work? tell me the syntax of an entire feature file
    - feature -> description of what is being tested
    - scenario -> description of the scenario being tested
        - Given ->  a precondition
        - When ->  condition that triggers the expected result
        - Then -> 

--------------------------------------------------------------------------
* cucumber scenario example
    - Given i am on the login page
    - And i enter username and password
    - When i click on the submit button
    - Then i should be able to see the profile picture
--------------------------------------------------------------------------
* Sample of feature file
    - Feature: log in fuctionality
    - Background:" anything common will go in background " 
                 Given I am on the log in page 
    - Scenario: 1 
    - Scenario: 2
--------------------------------------------------------------------------

--------------------------------------------------------------------------

--------------------------------------------------------------------------

--------------------------------------------------------------------------

--------------------------------------------------------------------------

--------------------------------------------------------------------------

--------------------------------------------------------------------------

--------------------------------------------------------------------------

--------------------------------------------------------------------------

--------------------------------------------------------------------------

--------------------------------------------------------------------------

--------------------------------------------------------------------------

--------------------------------------------------------------------------











