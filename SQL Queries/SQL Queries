SQL? STRUCTURE QUERY LANGUAGE

SQL STATEMENTS: 
        DML: DATA MANIPULATION LANGUAGE(SDET JOB)
                        SELECT 
                        INSERT      
                        UPDATE
                        DELETE
                        MERGE
        DDL: DATA DEFINITION LANGUAGE ( DEVELOPER )
                        CREATE
                        ALTER
                        DROP
                        RENAME
                        TRUNCATE
                        COMMENT
        DCL: DATA CONTROLER LANGUAGE
                        GRANT
                        REVOKE
        TRANSIT CONTROL
                        COMMIT
                        ROLLBACK
                        SAVEPOINT



-- how to print duplicate row in a tables
        select first_name,manager_id
        from employees
        group by first_name, manager_id
        having count (*) > 1;

-- how to print specifit duplicate individual from list based on
    manager id 145

        select *
        from employees
        where first_name = 'Peter'
        and manager_id = 145;

------------ Inner/left/right/outter JOIN -----------

-- Inner join Ans: An SQL Join is used 
-- to combine data from two or more tables, 
-- based on a common field between them. For 
-- example, consider the following two tables.

        select e.first_name, d.manager_id, d.location_id
        from employees e  join departments d
        on e.department_id = d.department_id;

        select e.first_name, d.manager_id, d.location_id
        from employees e left join departments d
        on e.department_id = d.department_id;

        select e.first_name, d.manager_id, d.location_id
        from employees e right join departments d
        on e.department_id = d.department_id;

        select e.first_name, d.manager_id, d.location_id
        from employees e full join departments d
        on e.department_id = d.department_id;

------------ NATURAL JOIN ----------- qualifier
-- Natural join 
    -- joins on columns with same name
    -- if name changes query will stop working
    -- if new columns are added query may stop working
    -- or show incorrect data
    -- can not qualifier next to e.

            select first_name,
            last_name,
            department_id,
            department_name
            from employees natural join departments;

------------ CARTESIAN JOIN -----------
    -- Not usually what you want
    -- often because join condition is missed
    -- gives you more records than expected
    -- use cross join keyword 

        select first_name
        department_name
        from employees cross join departments;

        select first_name
        department_name
        from employees, departments;

------------ SELF JOIN -----------
    -- join a table to itself
    -- used when a record in a table is related to another 
    record in the same table
    -- employee_id // manager_id

            Select e.employee_id,
            e.first_name,
            e.last_name,
            m.first_name,
            m.last_name,
            m.employee_id
            from employees e 
            left join employees m 
            on e.manager_id = m.employee_id;



------------ MULTIPLE TABLES JOIN -----------
        -- Multiple Tables
        -- big advantage of database
        -- we just add another join keyword
    
                select 
                e.employee_id,
                e.first_name,
                j.start_date,
                l.job_title
                from employees e 
                join job_history j 
                on e.employee_id = j.employee_id
                join jobs l 
                on j.job_id = l.job_id;

============================================================

------------ instr function -----------

 -- shows the number where that specific posission is lets say 
        for EABEL print me the number possition of letter B

                select first_name,
                last_name,
                email,
                instr(email,'B')
                from employees;

-- length of the name in numbers.
                select length(first_name), first_name
                from employees;


------------ Nesting function within function -----------

-- will allow you to print starting at 4568 which is the last 4 of a phone number 
        select first_name
        last_name,
        email,
        phone_number,
        instr(phone_number,4568)
        from employees;

------------ Dates functions -----------

==== how to print todays Date ====
for this you dont need any tables sql already comes with it

                select sysdate
                from dual;


-- print first name and last name and hire date for Steven King and show add 5 years 
        from his hire date and name it alias as review_date. 

                select first_name,
                last_name,
                hire_date,
                ADD_MONTHS(hire_date,60) as review_date
                from employees
                where first_name = 'Steven'
                and last_name = 'King';

how to print how long has an employee been working with the company?

---- IN DAYS months between function is used first parameter is sysdate it will 
        generate the date between system date and time of hire. 
                select first_name,
                last_name,
                hire_date,
                months_between(sysdate, hire_date) as time_with_company
                from employees;

--- in years we devide by 12 and later round by 1 decimal
                select first_name,
                last_name,
                hire_date,
                round (months_between(sysdate, hire_date)/12, 1) as Year_with_company
                from employees;

------------ ROUND numbers functions -----------
rounds numbers from 20.59 to 21
                select min_salary,
                ROUND (min_salary)
                from jobs;




---------- SQL INTERVIEW QUERIES ---------

-- find the second highest salary of employee

select max(salary)
from employees
where salary not in 
(select max (salary) from employees);

-- Find Max Salary from each department

select department_id, max(salary)
from employees
group by 
department_id;


-- print current date

select sysdate
from dual;

-- print the name of the distinct employee
-- whose hireDate is between 17-JUN-03 and 21-MAY-07

select distinct first_name 
from employees
where hire_date between '17-JUN-03' and '21-MAY-07';

-- find employee whose salary is equal or greater than 10000

select *
from employees
where salary >= 10000;

-- find name of employees whose name starts with M

select first_name
from employees
where first_name like 'M%';

-- print anual salary for employees

select first_name,last_name, salary*12
from employees;


-- print Lex from employees

select *
from employees
where first_name = 'Lex';

-- print salary for employees who earn 4000 to 8000

select *
from employees
where salary between 4000 and 8000;

-- list employees who are working in department 60 and 80

select *
from employees
where department_id in (60,80);


-- get employee id and last name in descending order based on employee id

select employee_Id, last_name
from employees
order by employee_id desc;

-- print last_name from employees and the lenght of their last names
-- also count how many employees have the same last name 

select last_name, count(*) ,LENGTH(last_name)
from employees
group by last_name;

-- select employee record with max salary

select *
from employees
where salary = (select max (salary) from employees);

-- select highest salary in employee table

select max(salary)
from employees;

-- select range of employee based on Id 

select *
from employees
where employee_id between 100 and 113;

--return employee name, highest salary and department name

select e.first_name,
e.salary,
d.department_name
from employees e join departments d
on (e.department_id = d.department_id)
where salary in (select max(salary) from employees);

-- return highest salary employee name department name for each department

select e.first_name,
e.salary,
d.department_name
from employees e join departments d
on (e.department_id = d.department_id)
where salary in 
(select max(salary) from employees group by department_id);

-- select a row if an employee is president or a sales 
-- representative and if the employee earns more than 15000

select last_name, job_id, salary
from employees
where (job_id = 'SA_REP'
or job_id = 'AD_PRES')
and salary > 10000;

-- select the row if an employee is a president and earns more than 15k
-- or if the employee is a sales representative 
        select last_name, job_id, salary
        from employees
        where job_id = 'SA_REP'
        or job_id = 'AD_PRES'
        and salary > 15000;


-- select employees from FI_ACCOUNT  who makes highest salary
        select last_name, job_id, salary
        from employees
        where job_id = 'FI_ACCOUNT'
        and salary = 
        (select max(salary) 
        from employees 
        where job_id = 'FI_ACCOUNT');


--find how many records are in countries table where country_name has "in" in them
        select count(*)
        from countries
        where country_name like '%in%';


--natural join
        select *
        from employees,jobs
        where employees.job_id = jobs.job_id;

-- query: return first name job title and max salary 



--natural join
        select jobs.job_title , 
        jobs.max_salary, 
        employees.first_name 
        from employees,jobs
        where employees.job_id = jobs.job_id;


-- self Join 

        select a.first_Name, b.first_name
        from employees a, employees b
        where a.first_name = b.first_name;

-- explicit inner join using join and on..

        select a.first_Name, b.first_name
        from employees a
        join employees b
        on a.first_name = b.first_name;

-- joins right join

        select c.first_name,c.department_id, j.min_salary,j.job_title
        from employees c
        right join jobs j
        on c.job_id = j.job_id
        order by c.first_name; 


-- print how many employees are in department id and id is 100 label
-- it as employees

        select count(department_id) as employees
        from employees
        where department_id=100;




